{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "bifrost",
            "metadata": {
                "description": "Base name for all resources (will be made unique with suffix)"
            }
        },
        "workspacesQuotaGB": {
            "type": "int",
            "defaultValue": 100,
            "minValue": 1,
            "maxValue": 1024,
            "metadata": {
                "description": "Azure Files workspace share quota in GB"
            }
        },
        "tmpQuotaGB": {
            "type": "int",
            "defaultValue": 50,
            "minValue": 1,
            "maxValue": 1024,
            "metadata": {
                "description": "Azure Files tmp share quota in GB"
            }
        },
        "functionsStorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": ["Standard_LRS", "Standard_GRS"],
            "metadata": {
                "description": "Storage account type for Functions runtime"
            }
        },
        "staticWebAppLocation": {
            "type": "string",
            "defaultValue": "eastus2",
            "allowedValues": [
                "eastus2",
                "westus2",
                "centralus",
                "westeurope",
                "eastasia"
            ],
            "metadata": {
                "description": "Location for Static Web App (limited regional availability)"
            }
        }
    },
    "variables": {
        "suffix": "[substring(toLower(uniqueString(resourceGroup().id, resourceGroup().location)), 0, 5)]",
        "storageAccountName": "[toLower(concat('st', parameters('baseName'), variables('suffix')))]",
        "apiFunctionAppName": "[toLower(concat(parameters('baseName'), '-api-', variables('suffix')))]",
        "staticWebAppName": "[toLower(concat(parameters('baseName'), '-swa-', variables('suffix')))]",
        "keyVaultName": "[toLower(concat(parameters('baseName'), '-kv-', variables('suffix')))]",
        "appInsightsName": "[concat(parameters('baseName'), '-insights')]",
        "apiHostingPlanName": "[concat(parameters('baseName'), '-api-plan-', variables('suffix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2025-01-01",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false
            },
            "resources": [
                {
                    "type": "blobServices",
                    "apiVersion": "2025-01-01",
                    "name": "default",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "resources": [
                        {
                            "type": "containers",
                            "apiVersion": "2025-01-01",
                            "name": "deployments",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
                            ],
                            "properties": {
                                "publicAccess": "None"
                            }
                        }
                    ]
                },
                {
                    "type": "fileServices",
                    "apiVersion": "2025-01-01",
                    "name": "default",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "shareDeleteRetentionPolicy": {
                            "enabled": true,
                            "days": 7
                        }
                    },
                    "resources": [
                        {
                            "type": "shares",
                            "apiVersion": "2025-01-01",
                            "name": "workspaces",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
                            ],
                            "properties": {
                                "shareQuota": "[parameters('workspacesQuotaGB')]",
                                "enabledProtocols": "SMB",
                                "accessTier": "Hot"
                            }
                        },
                        {
                            "type": "shares",
                            "apiVersion": "2025-01-01",
                            "name": "tmp",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
                            ],
                            "properties": {
                                "shareQuota": "[parameters('tmpQuotaGB')]",
                                "enabledProtocols": "SMB",
                                "accessTier": "Hot"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('appInsightsName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2025-05-01",
            "name": "[variables('keyVaultName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true,
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2024-04-01",
            "name": "[variables('apiHostingPlanName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "sku": {
                "tier": "FlexConsumption",
                "name": "FC1"
            },
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2024-11-01",
            "name": "[variables('apiFunctionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('apiHostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('apiHostingPlanName'))]",
                "functionAppConfig": {
                    "deployment": {
                        "storage": {
                            "type": "blobContainer",
                            "value": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, 'deployments')]",
                            "authentication": {
                                "type": "StorageAccountConnectionString",
                                "storageAccountConnectionStringName": "AzureWebJobsStorage"
                            }
                        }
                    },
                    "scaleAndConcurrency": {
                        "instanceMemoryMB": 512,
                        "maximumInstanceCount": 100
                    },
                    "runtime": {
                        "name": "python",
                        "version": "3.11"
                    }
                },
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2025-01-01').keys[0].value, ';EndpointSuffix=', environment().suffixes.storage)]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "Production"
                        },
                        {
                            "name": "AZURE_KEY_VAULT_URL",
                            "value": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).ConnectionString]"
                        },
                        {
                            "name": "PYTHON_ENABLE_WORKER_EXTENSIONS",
                            "value": "1"
                        }
                    ],
                    "azureStorageAccounts": {
                        "workspaces": {
                            "type": "AzureFiles",
                            "accountName": "[variables('storageAccountName')]",
                            "shareName": "workspaces",
                            "mountPath": "/workspace",
                            "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2025-01-01').keys[0].value]"
                        },
                        "tmp": {
                            "type": "AzureFiles",
                            "accountName": "[variables('storageAccountName')]",
                            "shareName": "tmp",
                            "mountPath": "/tmp",
                            "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2025-01-01').keys[0].value]"
                        }
                    },
                    "ftpsState": "Disabled",
                    "minTlsVersion": "1.2",
                    "http20Enabled": true
                },
                "httpsOnly": true
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), resourceId('Microsoft.Web/sites', variables('apiFunctionAppName')), 'Key Vault Secrets User API')]",
            "scope": "[concat('Microsoft.KeyVault/vaults', '/', variables('keyVaultName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Web/sites', variables('apiFunctionAppName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('apiFunctionAppName')), '2024-11-01', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Web/staticSites",
            "apiVersion": "2024-04-01",
            "name": "[variables('staticWebAppName')]",
            "location": "[parameters('staticWebAppLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('apiFunctionAppName'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Web/staticSites/linkedBackends",
            "apiVersion": "2024-04-01",
            "name": "[concat(variables('staticWebAppName'), '/backend')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))]",
                "[resourceId('Microsoft.Web/sites', variables('apiFunctionAppName'))]"
            ],
            "properties": {
                "backendResourceId": "[resourceId('Microsoft.Web/sites', variables('apiFunctionAppName'))]",
                "region": "[resourceGroup().location]"
            }
        }
    ],
    "outputs": {
        "apiFunctionAppUrl": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('apiFunctionAppName'))).defaultHostName)]"
        },
        "apiFunctionAppName": {
            "type": "string",
            "value": "[variables('apiFunctionAppName')]"
        },
        "staticWebAppUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName'))).defaultHostname]"
        },
        "staticWebAppName": {
            "type": "string",
            "value": "[variables('staticWebAppName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('keyVaultName')]"
        },
        "keyVaultUrl": {
            "type": "string",
            "value": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/')]"
        },
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]"
        }
    }
}
