[pytest]
# Pytest configuration for Bifrost Integrations
pythonpath = .
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Environment variables for testing
# Uses azurite-test container (sibling container on same Docker network)
# Note: azurite-test listens on ports 10100-10102 (different from dev azurite's 10000-10002)
env =
    AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://localhost:10100/devstoreaccount1;QueueEndpoint=http://localhost:10101/devstoreaccount1;TableEndpoint=http://localhost:10102/devstoreaccount1;

# Output options
addopts = -v --tb=short --strict-markers

# Custom markers for organizing tests
markers =
    unit: Unit tests (fast, mocked dependencies)
    integration: Integration tests (real HTTP + Azurite)
    requires_api: Tests that require Azure Functions API running (func start on port 7071)
    e2e: End-to-end tests (complete workflows)
    slow: Tests that take >1 second

# Warnings
filterwarnings =
    ignore::DeprecationWarning:pydantic.*
