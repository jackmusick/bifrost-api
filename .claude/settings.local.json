{
  "permissions": {
    "allow": [
      "Bash(ruff check shared/middleware.py --fix)",
      "Bash(ruff check functions/endpoints.py --fix)",
      "Bash(ruff check shared/middleware.py shared/registry.py shared/decorators.py shared/models.py functions/endpoints.py)",
      "Bash(curl -X POST \"http://localhost:4280/api/endpoints/webhook_example\" )",
      "Bash(.specify/scripts/bash/check-prerequisites.sh --json --require-tasks --include-tasks)",
      "Bash(ruff check shared/async_executor.py functions/worker.py)",
      "Bash(ruff check functions/workflows.py functions/endpoints.py)",
      "Bash(npx pyright shared/async_executor.py functions/worker.py functions/workflows.py functions/endpoints.py function_app.py)",
      "Bash(ruff check --select=E,W,F,I api/shared/models.py api/shared/registry.py api/shared/decorators.py api/functions/workflows.py api/functions/endpoints.py)",
      "Bash(ruff check --select=E,W,F,I shared/models.py shared/registry.py shared/decorators.py functions/workflows.py functions/endpoints.py)",
      "Bash(ruff check shared/models.py shared/registry.py functions/discovery.py shared/async_executor.py functions/worker.py)",
      "Bash(npx pyright shared/models.py shared/registry.py functions/discovery.py shared/async_executor.py functions/worker.py)",
      "Bash(python -m pytest tests/integration/engine/test_async_workflow_execution.py -v)",
      "Bash(python -m pytest tests/integration/engine/test_async_workflow_execution.py -v --tb=short)",
      "Bash(pip install azure-storage-queue)",
      "Bash(python -m pytest tests/integration/engine/test_async_workflow_execution.py::TestAsyncWorkflowConfiguration::test_async_workflow_metadata -v)",
      "Bash(python -m pytest tests/integration/engine/test_async_workflow_execution.py -v --tb=line)",
      "Bash(python -m pytest tests/integration/engine/test_async_workflow_execution.py::TestAsyncWorkflowConfiguration -v)",
      "Bash(brew update:*)",
      "Bash(brew upgrade:*)",
      "Bash(brew list:*)",
      "Bash(if [ -d \"/Users/jack/GitHub/bifrost-integrations/specs/006-final-push-md/checklists\" ])",
      "Bash(then echo \"exists\")",
      "Bash(else echo \"no checklists\")",
      "Bash(fi)",
      "Bash({ grep -E '\\- \\[[xX]\\]' requirements.md)",
      "Bash(})",
      "Bash(docker compose ps)",
      "Bash(docker compose -f docker-compose.testing.yml up -d)",
      "Bash(npm run tsc)",
      "Bash(npm run lint)",
      "Bash(docker compose -f docker-compose.testing.yml down)",
      "Bash(chmod +x /Users/jack/GitHub/bifrost-integrations/api/scripts/coverage_check.sh)",
      "Bash(docker compose -f docker-compose.testing.yml ps)",
      "Bash(chmod +x /Users/jack/GitHub/bifrost-integrations/.devcontainer/post-create.sh)",
      "Bash(npm run test)",
      "Bash(pip install pytest-env)",
      "Bash(find tests/contract -name \"*.py\" -exec wc -l {} +)",
      "Bash(for file in tests/contract/test_*.py)",
      "Bash(do echo \"$file:\")",
      "Bash(done)",
      "Bash(cat /Users/jack/GitHub/bifrost-integrations/api/pytest.ini)",
      "Bash(curl http://localhost:10102)",
      "Bash(curl -s http://localhost:7071/api/health)",
      "Bash(curl http://localhost:7071/api/health)",
      "Read(//private/tmp/**)",
      "Bash(docker compose up -d)"
    ],
    "deny": [],
    "ask": []
  }
}
