name: Build and Release

on:
    push:
        tags:
            - "v*"
    workflow_dispatch:

# Only run in upstream repo to prevent forks from creating releases
# Forks should use their own deployment workflows

permissions:
    contents: write # Required to create releases

jobs:
    build-api:
        runs-on: ubuntu-latest
        name: Build API Package
        # Only run in upstream repo, not forks
        if: github.event.repository.fork == false

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python 3.11
              uses: actions/setup-python@v4
              with:
                  python-version: "3.11"

            - name: Build API package
              run: |
                  cd api
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt --target=".python_packages/lib/site-packages"

                  # Create zip excluding unnecessary files
                  zip -r ../api.zip . \
                    -x "*.pyc" \
                    -x "*__pycache__*" \
                    -x "tests/*" \
                    -x ".git/*" \
                    -x ".venv/*"

            - name: Upload API artifact
              uses: actions/upload-artifact@v4
              with:
                  name: api-package
                  path: api.zip
                  retention-days: 90

    create-release:
        needs: [build-api]
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

        steps:
            - name: Download API artifact
              uses: actions/download-artifact@v4
              with:
                  name: api-package

            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      api.zip
                  body: |
                      ## Bifrost Integrations Release

                      ### Installation

                      **Zip Deploy (Quick Start):**
                      ```bash
                      # Deploy API Function App
                      az functionapp deployment source config-zip \
                        --resource-group <rg-name> \
                        --name <api-app-name> \
                        --src api.zip
                      ```

                      **GitHub Actions (Recommended):**
                      Use the deployment workflows in `.github/workflows/` with publish profiles.

                      ### Architecture
                      - API Function App with Azure Files mounts (`/workspace`, `/tmp`)
                      - Static Web App using API as "bring your own function"
                      - Azure Key Vault integration for secrets
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
