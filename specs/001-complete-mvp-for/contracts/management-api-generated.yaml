openapi: 3.0.3
info:
  title: Bifrost Integrations - Management API
  version: 1.0.0
  description: API for managing forms, organizations, permissions, and users. Auto-generated from Pydantic models.
  contact:
    name: Bifrost Integrations
    email: jack@gocovi.com
servers:
- url: http://localhost:7071
  description: Local development server
- url: https://{environment}.azurewebsites.net
  description: Azure deployment
  variables:
    environment:
      default: msp-automation-api-dev
      enum:
      - msp-automation-api-dev
      - msp-automation-api-prod
components:
  schemas:
    ConfigType:
      type: string
      enum:
      - string
      - int
      - bool
      - json
      - secret_ref
    ExecutionStatus:
      type: string
      enum:
      - Pending
      - Running
      - Success
      - Failed
    FormFieldType:
      type: string
      enum:
      - text
      - email
      - number
      - select
      - checkbox
      - textarea
    IntegrationType:
      type: string
      enum:
      - msgraph
      - halopsa
    UserType:
      type: string
      enum:
      - PLATFORM
      - ORG
    Organization:
      description: Organization entity (response model)
      properties:
        id:
          description: Organization ID (GUID)
          title: Id
          type: string
        name:
          maxLength: 200
          minLength: 1
          title: Name
          type: string
        tenantId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Microsoft 365 GDAP tenant ID
          title: Tenantid
        isActive:
          default: true
          title: Isactive
          type: boolean
        createdAt:
          format: date-time
          title: Createdat
          type: string
        createdBy:
          title: Createdby
          type: string
        updatedAt:
          format: date-time
          title: Updatedat
          type: string
      required:
      - id
      - name
      - createdAt
      - createdBy
      - updatedAt
      title: Organization
      type: object
    CreateOrganizationRequest:
      description: Request model for creating an organization
      properties:
        name:
          maxLength: 200
          minLength: 1
          title: Name
          type: string
        tenantId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Tenantid
      required:
      - name
      title: CreateOrganizationRequest
      type: object
    UpdateOrganizationRequest:
      description: Request model for updating an organization
      properties:
        name:
          anyOf:
          - maxLength: 200
            minLength: 1
            type: string
          - type: 'null'
          default: null
          title: Name
        tenantId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Tenantid
        isActive:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Isactive
      title: UpdateOrganizationRequest
      type: object
    Config:
      description: Configuration entity (global or org-specific)
      properties:
        key:
          title: Key
          type: string
        value:
          title: Value
          type: string
        type:
          $ref: '#/components/schemas/ConfigType'
        scope:
          description: GLOBAL for MSP-wide or 'org' for org-specific
          enum:
          - GLOBAL
          - org
          title: Scope
          type: string
        orgId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Organization ID (only for org-specific config)
          title: Orgid
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        updatedAt:
          format: date-time
          title: Updatedat
          type: string
        updatedBy:
          title: Updatedby
          type: string
      required:
      - key
      - value
      - type
      - scope
      - updatedAt
      - updatedBy
      title: Config
      type: object
    SetConfigRequest:
      description: Request model for setting config
      properties:
        key:
          pattern: ^[a-zA-Z0-9_]+$
          title: Key
          type: string
        value:
          title: Value
          type: string
        type:
          $ref: '#/components/schemas/ConfigType'
        scope:
          default: GLOBAL
          description: GLOBAL or org
          enum:
          - GLOBAL
          - org
          title: Scope
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
      required:
      - key
      - value
      - type
      title: SetConfigRequest
      type: object
    IntegrationConfig:
      description: Integration configuration entity
      properties:
        type:
          $ref: '#/components/schemas/IntegrationType'
        enabled:
          default: true
          title: Enabled
          type: boolean
        settings:
          additionalProperties: true
          description: Integration-specific settings
          title: Settings
          type: object
        updatedAt:
          format: date-time
          title: Updatedat
          type: string
        updatedBy:
          title: Updatedby
          type: string
      required:
      - type
      - settings
      - updatedAt
      - updatedBy
      title: IntegrationConfig
      type: object
    SetIntegrationConfigRequest:
      description: Request model for setting integration config
      properties:
        type:
          $ref: '#/components/schemas/IntegrationType'
        enabled:
          default: true
          title: Enabled
          type: boolean
        settings:
          additionalProperties: true
          title: Settings
          type: object
      required:
      - type
      - settings
      title: SetIntegrationConfigRequest
      type: object
    User:
      description: User entity
      properties:
        id:
          description: User ID from Azure AD
          title: Id
          type: string
        email:
          title: Email
          type: string
        displayName:
          title: Displayname
          type: string
        userType:
          $ref: '#/components/schemas/UserType'
          default: PLATFORM
          description: Platform admin or organization user
        isPlatformAdmin:
          default: false
          description: Whether user is platform admin
          title: Isplatformadmin
          type: boolean
        isActive:
          default: true
          title: Isactive
          type: boolean
        lastLogin:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Lastlogin
        createdAt:
          format: date-time
          title: Createdat
          type: string
      required:
      - id
      - email
      - displayName
      - createdAt
      title: User
      type: object
    Role:
      description: Role entity for organization users
      properties:
        id:
          description: Role ID (GUID)
          title: Id
          type: string
        name:
          maxLength: 100
          minLength: 1
          title: Name
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        isActive:
          default: true
          title: Isactive
          type: boolean
        createdBy:
          title: Createdby
          type: string
        createdAt:
          format: date-time
          title: Createdat
          type: string
        updatedAt:
          format: date-time
          title: Updatedat
          type: string
      required:
      - id
      - name
      - createdBy
      - createdAt
      - updatedAt
      title: Role
      type: object
    CreateRoleRequest:
      description: Request model for creating a role
      properties:
        name:
          maxLength: 100
          minLength: 1
          title: Name
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
      required:
      - name
      title: CreateRoleRequest
      type: object
    UpdateRoleRequest:
      description: Request model for updating a role
      properties:
        name:
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - type: 'null'
          default: null
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
      title: UpdateRoleRequest
      type: object
    UserRole:
      description: User-to-Role assignment entity
      properties:
        userId:
          title: Userid
          type: string
        roleId:
          title: Roleid
          type: string
        assignedBy:
          title: Assignedby
          type: string
        assignedAt:
          format: date-time
          title: Assignedat
          type: string
      required:
      - userId
      - roleId
      - assignedBy
      - assignedAt
      title: UserRole
      type: object
    FormRole:
      description: Form-to-Role access control entity
      properties:
        formId:
          title: Formid
          type: string
        roleId:
          title: Roleid
          type: string
        assignedBy:
          title: Assignedby
          type: string
        assignedAt:
          format: date-time
          title: Assignedat
          type: string
      required:
      - formId
      - roleId
      - assignedBy
      - assignedAt
      title: FormRole
      type: object
    AssignUsersToRoleRequest:
      description: Request model for assigning users to a role
      properties:
        userIds:
          description: List of user IDs to assign
          items:
            type: string
          minItems: 1
          title: Userids
          type: array
      required:
      - userIds
      title: AssignUsersToRoleRequest
      type: object
    AssignFormsToRoleRequest:
      description: Request model for assigning forms to a role
      properties:
        formIds:
          description: List of form IDs to assign
          items:
            type: string
          minItems: 1
          title: Formids
          type: array
      required:
      - formIds
      title: AssignFormsToRoleRequest
      type: object
    UserPermission:
      description: User permission entity
      properties:
        userId:
          title: Userid
          type: string
        orgId:
          title: Orgid
          type: string
        canExecuteWorkflows:
          default: false
          title: Canexecuteworkflows
          type: boolean
        canManageConfig:
          default: false
          title: Canmanageconfig
          type: boolean
        canManageForms:
          default: false
          title: Canmanageforms
          type: boolean
        canViewHistory:
          default: false
          title: Canviewhistory
          type: boolean
        grantedBy:
          title: Grantedby
          type: string
        grantedAt:
          format: date-time
          title: Grantedat
          type: string
      required:
      - userId
      - orgId
      - grantedBy
      - grantedAt
      title: UserPermission
      type: object
    PermissionsData:
      description: Permissions data for grant request
      properties:
        canExecuteWorkflows:
          title: Canexecuteworkflows
          type: boolean
        canManageConfig:
          title: Canmanageconfig
          type: boolean
        canManageForms:
          title: Canmanageforms
          type: boolean
        canViewHistory:
          title: Canviewhistory
          type: boolean
      required:
      - canExecuteWorkflows
      - canManageConfig
      - canManageForms
      - canViewHistory
      title: PermissionsData
      type: object
    GrantPermissionsRequest:
      description: Request model for granting permissions
      properties:
        userId:
          title: Userid
          type: string
        orgId:
          title: Orgid
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionsData'
      required:
      - userId
      - orgId
      - permissions
      title: GrantPermissionsRequest
      type: object
    FormFieldValidation:
      description: Form field validation rules
      properties:
        pattern:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Pattern
        min:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Min
        max:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Max
        message:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Message
      title: FormFieldValidation
      type: object
    FormField:
      description: Form field definition
      properties:
        name:
          description: Parameter name for workflow
          title: Name
          type: string
        label:
          description: Display label
          title: Label
          type: string
        type:
          $ref: '#/components/schemas/FormFieldType'
        required:
          default: false
          title: Required
          type: boolean
        validation:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          default: null
          title: Validation
        dataProvider:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Data provider name for dynamic options
          title: Dataprovider
        defaultValue:
          anyOf:
          - {}
          - type: 'null'
          default: null
          title: Defaultvalue
        placeholder:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Placeholder
        helpText:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Helptext
      required:
      - name
      - label
      - type
      title: FormField
      type: object
    FormSchema:
      description: Form schema with field definitions
      properties:
        fields:
          description: Max 50 fields per form
          items:
            $ref: '#/components/schemas/FormField'
          maxItems: 50
          title: Fields
          type: array
      required:
      - fields
      title: FormSchema
      type: object
    Form:
      description: Form entity (response model)
      properties:
        id:
          title: Id
          type: string
        orgId:
          description: Organization ID or 'GLOBAL'
          title: Orgid
          type: string
        name:
          maxLength: 200
          minLength: 1
          title: Name
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        linkedWorkflow:
          description: Workflow name to execute
          title: Linkedworkflow
          type: string
        formSchema:
          $ref: '#/components/schemas/FormSchema'
        isActive:
          default: true
          title: Isactive
          type: boolean
        isGlobal:
          default: false
          title: Isglobal
          type: boolean
        isPublic:
          default: false
          description: If true, any authenticated user can execute. If false, only users in assigned groups can execute.
          title: Ispublic
          type: boolean
        createdBy:
          title: Createdby
          type: string
        createdAt:
          format: date-time
          title: Createdat
          type: string
        updatedAt:
          format: date-time
          title: Updatedat
          type: string
      required:
      - id
      - orgId
      - name
      - linkedWorkflow
      - formSchema
      - createdBy
      - createdAt
      - updatedAt
      title: Form
      type: object
    CreateFormRequest:
      description: Request model for creating a form
      properties:
        name:
          maxLength: 200
          minLength: 1
          title: Name
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        linkedWorkflow:
          title: Linkedworkflow
          type: string
        formSchema:
          $ref: '#/components/schemas/FormSchema'
        isGlobal:
          default: false
          title: Isglobal
          type: boolean
        isPublic:
          default: false
          description: If true, any authenticated user can execute
          title: Ispublic
          type: boolean
      required:
      - name
      - linkedWorkflow
      - formSchema
      title: CreateFormRequest
      type: object
    UpdateFormRequest:
      description: Request model for updating a form
      properties:
        name:
          anyOf:
          - maxLength: 200
            minLength: 1
            type: string
          - type: 'null'
          default: null
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        linkedWorkflow:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Linkedworkflow
        formSchema:
          anyOf:
          - $ref: '#/components/schemas/FormSchema'
          - type: 'null'
          default: null
      title: UpdateFormRequest
      type: object
    WorkflowExecution:
      description: Workflow execution entity
      properties:
        executionId:
          title: Executionid
          type: string
        workflowName:
          title: Workflowname
          type: string
        formId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Formid
        executedBy:
          title: Executedby
          type: string
        status:
          $ref: '#/components/schemas/ExecutionStatus'
        inputData:
          additionalProperties: true
          title: Inputdata
          type: object
        result:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          default: null
          title: Result
        errorMessage:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Errormessage
        durationMs:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Durationms
        startedAt:
          format: date-time
          title: Startedat
          type: string
        completedAt:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Completedat
      required:
      - executionId
      - workflowName
      - executedBy
      - status
      - inputData
      - startedAt
      title: WorkflowExecution
      type: object
    ErrorResponse:
      description: API error response
      properties:
        error:
          description: Error code or type
          title: Error
          type: string
        message:
          description: Human-readable error message
          title: Message
          type: string
        details:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          default: null
          title: Details
      required:
      - error
      - message
      title: ErrorResponse
      type: object
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Azure AD JWT token
  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
security:
- BearerAuth: []
paths:
  /api/health:
    get:
      summary: Health check
      description: Check if the API is running
      tags:
      - Health
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
  /api/forms:
    get:
      summary: List forms
      description: Get all forms for an organization
      tags:
      - Forms
      parameters:
      - name: orgId
        in: query
        schema:
          type: string
        description: Filter by organization ID
      responses:
        '200':
          description: List of forms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      summary: Create form
      description: Create a new form
      tags:
      - Forms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormRequest'
      responses:
        '201':
          description: Form created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/forms/{formId}:
    get:
      summary: Get form
      description: Get form by ID
      tags:
      - Forms
      parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Form details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalError'
    put:
      summary: Update form
      description: Update an existing form
      tags:
      - Forms
      parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFormRequest'
      responses:
        '200':
          description: Form updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      summary: Delete form
      description: Delete a form (soft delete)
      tags:
      - Forms
      parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Form deleted
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalError'

